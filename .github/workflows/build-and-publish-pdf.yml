name: Build and publish PDF (diagnostics)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Environment info (for debugging)
        run: |
          echo "==== uname ===="
          uname -a
          echo "==== lsb_release ===="
          lsb_release -a || true
          echo "==== Disk space ===="
          df -h

      - name: Install TeX Live (common packages) and biber
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            texlive-latex-extra \
            texlive-fonts-recommended \
            texlive-lang-italian \
            texlive-pictures \
            latexmk \
            biber \
            fonts-lmodern \
            cm-super

      - name: Build PDF and capture logs
        id: build
        shell: bash
        run: |
          set -o pipefail
          mkdir -p out
          BUILD_LOG=build.log
          echo "Starting latexmk build (output also written to $BUILD_LOG)"
          # run latexmk, tee stdout/stderr to build.log
          latexmk -pdf -interaction=nonstopmode -halt-on-error -outdir=out main.tex 2>&1 | tee -a "$BUILD_LOG"
          LATEXMK_EXIT=${PIPESTATUS[0]:-1}
          echo "latexmk exit code: $LATEXMK_EXIT"
          echo "$LATEXMK_EXIT" > latexmk-exit-code.txt
          echo "Contents of out/:"
          ls -lah out || true
          echo "----- tail of $BUILD_LOG -----"
          tail -n 200 "$BUILD_LOG" || true

      - name: Upload build artifacts and logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex-output
          path: |
            out/**
            build.log
            latexmk-exit-code.txt
            *.log
            *.aux
            *.blg
            *.bbl
            *.fdb_latexmk
            *.fls

      - name: Publish generated PDF to GitHub Pages (gh-pages) (only on success)
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          publish_branch: gh-pages
